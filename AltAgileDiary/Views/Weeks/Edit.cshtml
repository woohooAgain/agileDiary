@model AltAgileDiary.Models.AgileDiary.Week

@{
    ViewData["Title"] = "Edit";
}

<h2>@Model.Start.ToShortDateString() - @Model.End.ToShortDateString()</h2>

<h4>Week result</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Conclusion" class="control-label"></label>
                @Html.TextAreaFor(m => m.Conclusion, 5, 0, new { @class = "form-control" })
                <span asp-validation-for="Conclusion" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Thanks" class="control-label"></label>
                @Html.TextAreaFor(m => m.Thanks, 5, 0, new { @class = "form-control" })
                <span asp-validation-for="Thanks" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
            
        </form>
    </div>
    <div class="form-group col-md-3">
        <label asp-for="Days" class="control-label"></label>

        @if (Model?.Days != null && Model.Days.Any())
        {
            var orderedDays = Model.Days.OrderBy(d => d.Date.Date);
            <ul>
                @foreach (var day in orderedDays)
                {
                    var dayFullName = $"{day.Date.DayOfWeek}, " + $"{day.Date.ToShortDateString()}";
                    <li><a asp-controller="Days" asp-action="Edit" asp-route-id="@day.Id">@Html.DisplayFor(item => dayFullName)</a></li>
                }
            </ul>
        }
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
