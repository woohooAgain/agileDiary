@page
@using  AgileDiary.Models.ViewModels

@model AgileDiary.Models.PageModels.Goals.EditGoalPageModel
@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>
<hr />

<div class="row">
    <form method="POST">
        <div class="col-md-4">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div>
                <input type="hidden" value="@Model.Goal.Id" name="Goal.Id" />
            </div>
            <div class="form-group">
                <label asp-for="Goal.Title" class="control-label"></label>
                <input asp-for="Goal.Title" type="text" class="form-control" />
                <span asp-validation-for="Goal.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Goal.Description" class="control-label"></label>
                <input asp-for="Goal.Description" type="text" class="form-control" />
                <span asp-validation-for="Goal.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Goal.Result" class="control-label"></label>
                <input asp-for="Goal.Result" type="text" class="form-control" />
                <span asp-validation-for="Goal.Result" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>
        <div class="col-md-8">
            <h4>Tasks connencted with the goal</h4>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Goal.Tasks[0].Title)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Goal.Tasks[0].Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Goal.Tasks[0].Date)
                        </th>
                        <th>
                            Actions
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var task in Model.Goal.Tasks ?? new List<TaskViewModel>())
                    {
                        var taskId = new Dictionary<string, string>
                        {
                            { "taskId", task.Id.ToString() }
                        };
                        <tr>
                            <td>
                                @task.Title
                            </td>
                            <td>
                                @task.Description
                            </td>
                            <td>
                                @task.Date.ToShortDateString()
                            </td>
                            <td>
                                <a asp-page="/Tasks/Edit" asp-all-route-data="taskId">Edit</a> |
                                <a asp-page="/Tasks/Delete" asp-all-route-data="taskId">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </form>
</div>
<div>
    @{
        var d = new Dictionary<string, string>
    {
                { "sprintId", Model.Goal.SprintId.ToString() }
            };
    }
    <a asp-page="SprintGoals" asp-all-route-data="d">Back to Goals List</a>
</div>

